<?php

namespace mihoshi\hashValidator;

use mihoshi\hashValidator\loaders\yamlLoader;
use mihoshi\hashValidator\exceptions\loaderException;

class yamlLoaderTest extends hashValidatorTestCase
{
    public function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        if (!function_exists('yaml_parse_file')) {
            self::markTestIncomplete();
        }
    }

    /**
     * @throws loaderException
     */
    public function testRead_notFound(): void
    {
        $this->expectException(loaderException::class);
        // 実存しないファイル
        $loader = new yamlLoader();
        $loader->load('testReadJsonXX.yml');
    }

    /**
     * @throws loaderException
     */
    public function testRead_notYamlFormat(): void
    {
        $this->expectException(loaderException::class);
        // yaml以外のファイル
        $loader = new yamlLoader();
        $loader->load(__FILE__);
    }

    public function testRead_success(): void
    {
        $loader = new yamlLoader();
        self::assertSame(['type' => 'int', 'min' => 0],
            $loader->load(dirname(__DIR__) . '/testData/testReadYaml01.yml'));
    }

    public function testInclude(): void
    {
        $loader = new yamlLoader();
        $def = $loader->load(realpath(dirname(__DIR__) . '/testData/testIncludeYaml01.yml'));
        self::assertSame([
            "type" => "hash",
            "key" => [
                "key1" => ["type" => "int", "min" => 0,],
                'key2' => ['type' => 'int'],
            ],
        ], $def);
    }

}
